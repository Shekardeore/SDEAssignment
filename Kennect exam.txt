Assignment 1 :-
Write and submit code to set up a handler for a focus-event on an input element having id name which is a direct child of an element having id john.
• When run, the handler should add the HTML class shape to all elements having a HTML class of important which are direct children of an element having id john.
• The event should not propagate beyond the handler.
<!DOCTYPE html>
<html>
    <head>
        <meta charset='utf-8'>
        <meta http-equiv='X-UA-Compatible' content='IE=edge'>
        <title>Page Title</title>
        <meta name='viewport' content='width=device-width, initial-scale=1'>
    </head>
    <body>
        <div id="john" >
            Trigger for focus event : <input type="text" id="name">
            <div class="important"></div>
        </div>

        <script>
            document.getElementById("name").addEventListener("focus",myFunction);

            function myFunction(){
                document.getElementById("name").style.background="red";
                document.getElementById("name").classList = "shape";
            }
        </script>
    </body>

</html>
-----------------------------------------------------------------------------------------------------------------
Assignment 2 : 
Explain JWT in approx and prove it's top 3 benefits.

 A JSON web token(JWT) is JSON Object which is used to securely transfer information over the web(between two parties).
 It can be used for an authentication system and can also be used for information exchange.The token is mainly composed
 of header, payload, signature. These three parts are separated by dots(.). JWT defines the structure of information
 we are sending from one party to the another, and it comes in two forms – Serialized, Deserialized. The Serialized approach
 is mainly used to transfer the data through the network with each request and response. While the deserialized approach is
 used to read and write data to the web token.
The top 3 benefits of JWT are,
1.No Database Table : This implies fewer DB queries, which implies faster response time. In case you are using paid services
 like DynamoDb that charge per query basis, JWT might reduce the costs marginally.But these can be resolved using tools like
 Redis in case of sessions.
2.Simpler to use if careful : If your architecture doesn’t user client Sessions and your security basics are clear, the development
 time in case of JWT is faster using the existing libraries.
3.Used across services : You can have one authorization server that deals with the Login/Registration and generates the token,
 all the subsequent requests will need not have to go to the authorization server as the only the Auth-server will have have
 the private key, and rest of the severs will have the public-key to verify the signature.This is really helpfull for the corporate
 Systems where in the authorization server is in a secure environment.

---------------------------------------------------------------------------------------------------------------------------------------
Assignment 3 :-
Given a number x, find out if it is a prime number or not, use javascript and find out the difference between Next prime number
 after X and X

<script>
      class PrimeNumber{
        static isPrime(num){
            let flag=false;
            for(let i=2;i<num/2 ;++i)
            {
                if((num%i)==0)
                {
                    flag=true;
                    break;
                }
            }
            return flag;
        }
        static nextPrime(num)
        {
            num++;
            for(let i=2;i<num;i++)
            {
                if(num%i==0){
                    num++;
                    i=2;
                }else{
                    continue;
                }
            }
            return num;
        }
        static main(args)
        {
            let num=12; // Assuming number for test 
            let result = 0;
            var prime = PrimeNumber.isPrime(num);
            if(!prime){
                console.log(num+ " is prime number");
            }
            else{
                console.log(num+ " is not prime number");
            }
            console.log("Next prime number is "+PrimeNumber.nextPrime(num));
            var nxt=PrimeNumber.nextPrime(num);
            let diff = nxt- num;
            console.log("Difference in prime numbers is "+diff);
        }
      }
      PrimeNumber.main([]);

    </script>